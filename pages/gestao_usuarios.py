import streamlit as st
from utils.auth import AuthManager, require_auth
from utils.sidebar import create_sidebar

st.set_page_config(page_title="Gest칚o de Usu치rios - OptiMind", page_icon="游녻", layout="wide")

# Autentica칞칚o obrigat칩ria
name, username = require_auth()

# S칩 admin pode acessar
if username != "admin":
    st.error("Acesso restrito: apenas o administrador pode acessar esta p치gina.")
    st.stop()

create_sidebar()

st.title("游녻 Gest칚o de Usu치rios")
st.write("Adicione ou remova usu치rios do sistema. Apenas o admin pode acessar esta p치gina.")

# Instancia o gerenciador de usu치rios
auth_manager = AuthManager()

# Lista de usu치rios
st.subheader("Usu치rios cadastrados")
usuarios = auth_manager.list_users()
st.write(usuarios)

# Formul치rio para adicionar usu치rio
st.subheader("Adicionar novo usu치rio")
with st.form("add_user_form"):
    novo_username = st.text_input("Username")
    novo_nome = st.text_input("Nome completo")
    nova_senha = st.text_input("Senha", type="password")
    submit_add = st.form_submit_button("Adicionar usu치rio")
    if submit_add:
        sucesso, msg = auth_manager.add_user(novo_username, novo_nome, nova_senha)
        if sucesso:
            st.success(msg)
            st.rerun()
        else:
            st.error(msg)

# Remover usu치rio
st.subheader("Remover usu치rio")
usuario_remover = st.selectbox("Selecione o usu치rio para remover", [u for u in usuarios if u != "admin"])
if st.button("Remover usu치rio"):
    if usuario_remover:
        if auth_manager.remove_user(usuario_remover):
            st.success(f"Usu치rio '{usuario_remover}' removido com sucesso.")
            st.rerun()
        else:
            st.error("Erro ao remover usu치rio.") 